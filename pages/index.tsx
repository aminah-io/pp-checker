import { useEffect, useState } from 'react';
import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useAccount } from 'wagmi';
import {PassportReader} from '@gitcoinco/passport-sdk-reader';
let verifier: any;
import('@gitcoinco/passport-sdk-verifier').then(ver => verifier = new ver.PassportVerifier());
let scorer: any;
import('@gitcoinco/passport-sdk-scorer').then(sco => scorer = sco);

const reader = new PassportReader("https://ceramic.passport-iam.gitcoin.co", "1");

const Home: NextPage = () => {
  const { address } = useAccount();
  const [score, setScore] = useState(0);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
      async function getData() {
        setLoading(true)
        const passport = await reader.getPassport(address!)
        console.log('** passport **', passport)
        const verified = await verifier.verifyPassport(address!, passport)
        console.info('** verifier **', verified)
        const scorerI = new scorer.PassportScorer([
          {
            provider: 'Ens',
            issuer: "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
            score: 0.5
          },
          {
            provider: 'Twitter',
            issuer: "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
            score: 0.5
          },
          {
            provider: 'Google',
            issuer: "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
            score: 0.5
          },
        ], 'https://ceramic.passport-iam.gitcoin.co', '1')
        const score = await scorerI.getScore(address!, passport);
        
        console.info('** score **', score)
        setScore(score)
        setLoading(false)
      };
      getData()
  }, [address])

  return (
    <div className={styles.container}>
      <Head>
        <title>Passport Checker ðŸ›‚</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <div className={styles.message}>
          {
            !address 
            ?
              <div>Please connect your wallet</div>
            :
            loading 
            ? 
              <div>Loading...</div> 
            :
              score >= 1 
              ?
                <div>You are extremely dope, because your score is super high. Nice stamps ðŸ˜Ž</div>
              :
                <div>You need more stamps, your score is <strong>NOT</strong> high enough, my friend.</div>
          }
        </div>
      </main>

    </div>
  );
};

export default Home;
